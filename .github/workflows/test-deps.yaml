name: Test - Dependencies
on:
  workflow_call:
  workflow_dispatch:  # to trigger manually

jobs:

  batcharray:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        batcharray-version: [ 0.0.2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'batcharray'
          package-version: ${{ matrix.batcharray-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  coola:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        coola-version: [ 0.8.3, 0.7.4, 0.7.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'coola'
          package-version: ${{ matrix.coola-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  grizz:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        grizz-version: [ 0.0.5 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'grizz'
          package-version: ${{ matrix.grizz-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  iden:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        iden-version: [ 0.0.4, 0.0.3 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'iden'
          package-version: ${{ matrix.iden-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        numpy-version: [ 2.1.1, 2.0.2, 1.26.4, 1.25.2, 1.24.3, 1.23.5, 1.22.4 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'numpy'
          package-version: ${{ matrix.numpy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov


  polars:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        polars-version: [ 1.8.2, 1.7.1, 1.6.0, 1.5.0, 1.4.1, 1.3.0, 1.2.1, 1.1.0, 1.0.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'polars'
          package-version: ${{ matrix.polars-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  #################################
  #     Optional dependencies     #
  #################################


  gdown:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        gdown-version: [ 5.2.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'gdown'
          package-version: ${{ matrix.gdown-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  requests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        requests-version: [ 2.32.3, 2.31.0, 2.20.0 ]
        exclude:
          # python 3.12
          - requests-version: 2.20.0
            python-version: '3.12'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'requests'
          package-version: ${{ matrix.requests-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test


  tqdm:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        tqdm-version: [ 4.66.5, 4.65.2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install packages
        run: |
          poetry run make config-poetry
          poetry run make install

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.2.2
        with:
          package-name: 'tqdm'
          package-version: ${{ matrix.tqdm-version }}
          python-version: ${{ matrix.python-version }}

      - name: Show installed packages
        run: |
          poetry run poetry show
          poetry run poetry show --tree

      - name: Run unit tests
        run: |
          poetry run make unit-test-cov

      - name: Run integration tests
        run: |
          poetry run make integration-test
