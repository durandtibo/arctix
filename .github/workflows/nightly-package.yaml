name: Nightly Package Tests
on:
  schedule:
    - cron: '50 9 * * *' # run at 9:50:00 UTC
  workflow_dispatch:  # manual trigger

jobs:
  stable-package:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install arctix

      - name: Test available packages
        run: |
          python -c "import arctix; from arctix import summary;" \
            "isinstance(summary(1), str);" \
            "assert not arctix.utils.imports.is_numpy_available();" \
            "assert not arctix.utils.imports.is_torch_available();"

  stable-package-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install "arctix[all]"

      - name: Test available packages
        run: |
          python -c "import arctix; from arctix import summary;" \
            "isinstance(summary(1), str);" \
            "assert arctix.utils.imports.is_numpy_available();" \
            "import numpy; isinstance(summary(numpy.ones((2, 3))), str);" \
            "assert arctix.utils.imports.is_torch_available();" \
            "import torch; isinstance(summary(torch.ones(2, 3)), str);"


  latest-package:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre arctix

      - name: Test available packages
        run: |
          python -c "import arctix; from arctix import summary;" \
            "isinstance(summary(1), str);" \
            "assert not arctix.utils.imports.is_numpy_available();" \
            "assert not arctix.utils.imports.is_torch_available();"

  latest-package-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre "arctix[all]"

      - name: Test available packages
        run: |
          python -c "import arctix; from arctix import summary;" \
            "isinstance(summary(1), str);" \
            "assert arctix.utils.imports.is_numpy_available();" \
            "import numpy; isinstance(summary(numpy.ones((2, 3))), str);" \
            "assert arctix.utils.imports.is_torch_available();" \
            "import torch; isinstance(summary(torch.ones(2, 3)), str);"
